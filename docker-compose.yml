services:
  bookstore-api:
    container_name: api-container-bookstore
    image: api-image-bookstore:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '8080:8080'
    networks:
      - backend
    depends_on:
      mysqldb:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  mysqldb:
    container_name: mysqldb
    image: mysql:8.4.0
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=bookstore
    ports:
      - "3306:3306"
    networks:
      - backend
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysqldb", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 256M
      
  redis:
    container_name: redis
    image: redis:7.4.1-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6379:6379"
    networks:
      - backend
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis-data:/data
    deploy:
      resources:
        limits:
          memory: 128M

networks:
  backend:
    driver: bridge

volumes:
  mysql-data:
  redis-data: